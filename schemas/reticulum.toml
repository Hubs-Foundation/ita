ret.pool = { "type" = "string", "default" = "default" }
phx.port = { "type" = "number", "default" = 4000 }
phx.ip = { "type" = "string", "default" = "127.0.0.1" }
phx.secret_key = { "type" = "string", "default" = "txlMOtlaY5x3crvOCko4uV5PM29ul3zGo1oBGNO3cDXx+7GHLKqt0gR9qzgThxb5" }
phx.url_host = { "type" = "string", "default" = "" }
phx.url_port = { "type" = "number", "default" = 443 }
phx.url_host_prefix = { "type" = "string", "default" = "" }
phx.static_url_host = { "type" = "string", "default" = "" }
phx.static_url_host_prefix = { "type" = "string", "default" = "" }
phx.secondary_url_host = { "type" = "string", "default" = "" }
phx.cors_proxy_url_host = { "type" = "string", "default" = "" }
phx.thumbnail_url_host = { "type" = "string", "default" = "" }
phx.imgproxy_url_host = { "type" = "string", "default" = "" }
phx.imgproxy_url_port = { "type" = "number", "default" = 5000 }
phx.assets_url_host = { "type" = "string", "default" = "" }
phx.link_url_host = { "type" = "string", "default" = "" }
phx.admin_access_key = { "type" = "string", "default" = "" }
phx.allow_crawlers = { "type" = "boolean", "default" = false, category = "content", name = "Allow Web Crawlers", description = "Allowing web crawlers will cause your site to be hit regularly and be listed in search engines." }
guardian.secret_key = { "type" = "string", "default" = "txlMOtlaY5x3crvOCko4uV5PM29ul3zGo1oBGNO3cDXx+7GHLKqt0gR9qzgThxb5" }
guardian.perms_key = { "type" = "string", "default" = "" }
guardian.oauth_token_key = { "type" = "string", "default" = "" }
erlang.node_cookie = { "type" = "string", "default" = "txlMOtlaY5x3crvOCko4uV5PM29ul3zGo1oBGNO3cDXx+7GHLKqt0gR9qzgThxb5" }
ret.bot_access_key = { "type" = "string", "default" = "" }
habitat.http_port = { "type" = "number", "default" = 9631 }
habitat.ip = { "type" = "string", "default" = "127.0.0.1" }
oauth_google.client_id = { "type" = "string", "default" = "foo" }
oauth_google.client_secret = { "type" = "string", "default" = "bar" }
db.username = { "type" = "string", "default" = "postgres" }
db.password = { "type" = "string", "default" = "postgres" }
db.port = { "type" = "number", "default" = 5432 }
db.postgrest_password = { "type" = "string", "default" = "admin" }
db.hostname = { "type" = "string", "default" = "localhost" }
db.database = { "type" = "string", "default" = "polycosm_production" }
db.template = { "type" = "string", "default" = "template0" }
db.pool_size = { "type" = "number", "default" = 16 }
db.idle_interval = { "type" = "number", "default" = 3000000000 }
db.queue_interval = { "type" = "number", "default" = 60000 }
db.timeout = { "type" = "number", "default" = 60000 }
db.ssl = { "type" = "boolean", "default" = false }
session_lock_db.username = { "type" = "string", "default" = "postgres" }
session_lock_db.password = { "type" = "string", "default" = "postgres" }
session_lock_db.hostname = { "type" = "string", "default" = "localhost" }
session_lock_db.database = { "type" = "string", "default" = "polycosm_locking" }
session_lock_db.port = { "type" = "number", "default" = 5432 }
session_lock_db.ssl = { "type" = "boolean", "default" = false }
security.content_security_policy = { "type" = "string", "default" = "default-src 'self'", category = "advanced", name = "Content Security Policy", description = "Content-Security-Policy override, leave blank to use the generated CSP." }
security.cors_origins = { "type" = "string", "default" = "*" }
uploads.host = { "type" = "string", "default" = "" }
uploads.storage_path = { "type" = "string", "default" = "/storage" }
uploads.quota_gb = { "type" = "number", "default" = 100 }
uploads.ttl = { "type" = "number", "default" = 172800, category = "content", name = "Storage TTL (seconds)", description = "Un-pinned stored files are removed after this TTL. (Default: 172800 seconds = 2 days)" }
pages.insecure_ssl = { "type" = "string", "default" = "false" }
janus.admin_secret = { "type" = "string", "default" = "secret" }
janus.admin_port = { "type" = "number", "default" = 7000 }
janus.service_name = { "type" = "string", "default" = "janus-gateway" }
janus.janus_port = { "type" = "number", "default" = 80 }
run.hostname_dns_suffix = { "type" = "string", "default" = "" }
web_push.public_key = { "type" = "string", "default" = "" }
web_push.private_key = { "type" = "string", "default" = "" }
web_push.subject = { "type" = "string", "default" = "" }
pages.hubs_page_origin = { "type" = "string", "default" = "" }
pages.spoke_page_origin = { "type" = "string", "default" = "" }
speelycaptor.speelycaptor_endpoint = { "type" = "string", "default" = "" }
resolver.photomnemonic_endpoint = { "type" = "string", "default" = "" }
email.username = { "type" = "string", "default" = "", category = "email", name = "SMTP Username", description = "Custom SMTP username for sending email." }
email.password = { "type" = "string", "default" = "", category = "email", name = "SMTP Password", description = "Custom SMTP password for sending email." }
email.from = { "type" = "string", "default" = "", category = "email", name = "SMTP From:", description = "Custom From: address for sending email." }
email.server = { "type" = "string", "default" = "", category = "email", name = "SMTP Server", description = "Custom SMTP server for email." }
email.port = { "type" = "number", "default" = 587, category = "email", name = "SMTP Port", description = "Custom SMTP port for email." }
resolver.ytdl_host = { "type" = "string", "default" = "http://localhost:8080" }
resolver.sketchfab_api_key = { "type" = "string", "default" = "", category = "api_keys", name = "Sketchfab API Key", description = "API key to use for Sketchfab model search." }
resolver.google_poly_api_key = { "type" = "string", "default" = "", category = "api_keys", name = "Google Poly API Key", description = "API key to use for Google Poly model search." }
resolver.tenor_api_key = { "type" = "string", "default" = "", category = "api_keys", name = "Tenor API Key", description = "API key to use for Tenor GIF search." }
resolver.bing_search_api_key = { "type" = "string", "default" = "", category = "api_keys", name = "Bing Search API Key", description = "API key to use for Bing Image and Video search." }
resolver.twitch_client_id = { "type" = "string", "default" = "", category = "api_keys", name = "Twitch Client ID", description = "Client ID to use for Twitch search." }
accounts.admin_email = { "type" = "string", default = ""  }
assets.assets_path = { "type" = "string", default = "" }
twitter_client.access_token = { "type" = "string", "default" = "", category = "api_keys", name = "Twitter Access Token", description = "Twitter API Access Token to enable Twitter sharing" }
twitter_client.access_token_secret = { "type" = "string", "default" = "", category = "api_keys", name = "Twitter Access Token Secret", description = "Twitter API Access Token Secret" }
twitter_client.consumer_secret = { "type" = "string", "default" = "", category = "api_keys", name = "Twitter Consumer Secret", description = "Twitter API Consumer Secret" }
twitter_client.consumer_key = { "type" = "string", "default" = "", category = "api_keys", name = "Twitter Consumer Key", description = "Twitter API Consumer Key" }
discord_client.client_id = { "type" = "string", "default" = "", category = "api_keys", name = "Discord Client ID", description = "Discord Client ID for Hubs Discord Bot" }
discord_client.client_secret = { "type" = "string", "default" = "", category = "api_keys", name = "Discord Client Secret", description = "Discord Client Secret for Hubs Discord Bot" }
discord_client.bot_token = { "type" = "string", "default" = "", category = "api_keys", name = "Discord Bot Token", description = "Discord Bot Token for Hubs Discord Bot" }
